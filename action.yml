name: 'Solana Setup Action'
description: 'Reusable GitHub Action to set up a full Solana development environment'

branding:
  icon: 'package'
  color: 'blue'

inputs:
  node-version:
    description: 'Node.js version to use'
    required: false
    default: '18'
    
  solana-cli-version:
    description: 'Solana CLI version to install'
    required: false
    default: ''
    
  anchor-version:
    description: 'Anchor CLI version to install'
    required: false
    default: ''
    
  pnpm-package-manager:
    description: 'pnpm version to install'
    required: false
    default: ''
    
  yarn-package-manager:
    description: 'Yarn version to install'
    required: false
    default: ''

  x-ray-enabled:
    description: 'Enable Sec3 X-Ray Analysis'
    required: false
    default: 'false'
    
  working-directory:
    description: 'Working directory for X-Ray analysis'
    required: false
    default: '.'

runs:
  using: 'composite'
  steps:
    # 1️⃣ Install required system dependencies for Solana, Anchor, hidapi, etc.
    - name: Install system dependencies
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y libudev-dev pkg-config build-essential curl git

    # 2️⃣ Install Node.js
    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}

    # 3️⃣ Install Solana CLI
    - name: Install Solana CLI
      shell: bash
      run: |
        if [ -n "${{ inputs.solana-cli-version }}" ]; then
          echo "Installing Solana CLI..."
          sh -c "$(curl -sSfL https://release.anza.xyz/stable/install)"
          export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
          solana --version
        else
          echo "Skipping Solana CLI installation as no version was provided."
        fi

    # 4️⃣ Install Anchor CLI via AVM
    - name: Install Anchor CLI
      shell: bash
      run: |
        if [ -n "${{ inputs.anchor-version }}" ]; then
        cargo install --git https://github.com/coral-xyz/anchor --tag ${{ inputs.anchor-version }} anchor-cli
        anchor --version
        else
          echo "Skipping Anchor CLI installation as no version was provided."
        fi

    # 5️⃣ Install pnpm (optional)
    - name: Install pnpm
      shell: bash
      run: |
        if [ -n "${{ inputs.pnpm-package-manager }}" ]; then
          echo "Installing pnpm..."
          npm install -g pnpm@${{ inputs.pnpm-package-manager }}
        else
          echo "Skipping pnpm installation as no version was provided."
        fi

    # 6️⃣ Install Yarn (optional)
    - name: Install Yarn
      shell: bash
      run: |
        if [ -n "${{ inputs.yarn-package-manager }}" ]; then
          echo "Installing Yarn..."
          npm install -g yarn@${{ inputs.yarn-package-manager }}
        else
          echo "Skipping Yarn installation as no version was provided."
        fi

    # 7️⃣ Run Sec3 X-Ray analysis (optional)
    - name: Run Sec3 X-Ray
      if: ${{ inputs.x-ray-enabled == 'true' }}
      shell: bash
      run: |
        echo "Running X-Ray static analysis..."
        docker run --rm \
          --volume "${{ github.workspace }}/${{ inputs.working-directory }}:/project" \
          ghcr.io/sec3-product/x-ray:latest \
          /project
