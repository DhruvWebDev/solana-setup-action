name: 'Solana Setup Action'
description: 'Reusable GitHub Action to set up a full Solana development environment'

branding:
  icon: 'package'   # Valid Octicon (e.g., package, terminal, gear, etc.)
  color: 'blue'

inputs:
  node-version:
    description: 'Node.js version to use'
    required: false
    default: '18'
    
  solana-cli-version:
    description: 'Solana CLI version to install'
    required: false
    default: '1.18.18'
    
  anchor-version:
    description: 'Anchor CLI version to install'
    required: false
    default: '0.30.1'
    
  pnpm-package-manager:
    description: 'pnpm version to install'
    required: false
    default: '8.15.5'
    
  yarn-package-manager:
    description: 'Yarn version to install'
    required: false
    default: '1.22.19'

runs:
  using: 'composite'
  steps:
    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}

    - name: Install Solana CLI
      shell: bash
      run: |
       if [ -n "${{ inputs.solana-cli-version }}" ]; then
         sh -c "$(curl -sSfL https://release.anza.xyz/stable/install)"
         export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
         echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
         solana --version    else
        echo "Skipping solana cli installation as no version was provided."
       fi   
       
    - name: Install Anchor CLI
      run: |
       if [ -n "${{ inputs.anchor-version }}" ]; then
        npm install -g @coral-xyz/anchor-cli@${{ inputs.anchor-version }}
       else
        echo "Skipping anchor cli  installation as no version was provided."
       fi
      shell: bash

    - name: Install pnpm
      run: |
       if [ -n "${{ inputs.pnpm-package-manager }}" ]; then
        npm install -g pnpm@${{ inputs.pnpm-package-manager }}
       else
        echo "Skipping pnpm package installation as no version was provided."
       fi
      shell: bash

    - name: Install Yarn
      run: |
       if [ -n "${{ inputs.yarn-package-manager }}" ]; then
        npm install -g yarn@${{ inputs.yarn-package-manager }}
       else
        echo "Skipping yarn package installation as no version was provided."
       fi
      shell: bash
